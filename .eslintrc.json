{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:security/recommended",
    "plugin:sonarjs/recommended",
    "plugin:unicorn/recommended",
    "prettier"
  ],
  "plugins": [
    "@typescript-eslint",
    "jsx-a11y",
    "security",
    "sonarjs",
    "unicorn",
    "import"
  ],
  "rules": {
    // Base rules
    "curly": ["error", "multi-line"],
    "eqeqeq": ["error", "always", { "null": "ignore" }],
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "no-multi-spaces": ["error", { "ignoreEOLComments": true }],
    "no-trailing-spaces": "error",
    "no-unused-vars": "off",
    
    // TypeScript rules
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-non-null-assertion": "error",
    
    // React rules
    "react/no-unescaped-entities": [
      "error",
      {
        "forbid": [
          { "char": ">", "alternatives": [">"] },
          { "char": "}", "alternatives": ["&#125;"] }
        ]
      }
    ],
    "react/jsx-no-target-blank": ["error", { "enforceDynamicLinks": "always" }],
    "react/jsx-key": "error",
    "react/self-closing-comp": "error",
    
    // Accessibility rules
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/anchor-is-valid": "error",
    "jsx-a11y/aria-props": "error",
    
    // Security rules
    "security/detect-object-injection": "warn",
    "security/detect-non-literal-fs-filename": "warn",
    "security/detect-possible-timing-attacks": "warn",
    
    // Import rules
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always",
        "alphabetize": { "order": "asc", "caseInsensitive": true }
      }
    ],
    
    // Code quality rules
    "sonarjs/no-duplicate-string": "warn",
    "sonarjs/no-identical-functions": "warn",
    
    // Unicorn rules
    "unicorn/prefer-module": "off",
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true
        }
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      }
    }
  }
}
